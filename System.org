#+TITLE: GNU Guix System Configuration
#+AUTHOR: Jacob Stannix
#+PROPERTY: header-args :tangle ./config/.config/guix/system.scm
* Inbox
** TODO setup passwords

* Modules
  #+begin_src scheme
    (use-modules (gnu) (gnu packages shells) (nongnu packages linux))
    (use-service-modules
     cups
     desktop
     networking
     ssh
     xorg)
  #+end_src
* OS
  #+begin_src scheme
  (operating-system
   (kernel linux)
   (firmware (list linux-firmware))
   (locale "en_CA.utf8")
   (timezone "America/Edmonton")
   (keyboard-layout (keyboard-layout "us"))
   (host-name "Cortex")
  #+end_src
** Users
   #+begin_src scheme
   (users (cons* (user-account
                  (name "jake")
                  (comment "Jake")
                  (group "users")
                  (shell (file-append zsh "/bin/zsh"))
                  (home-directory "/home/jake")
                  (supplementary-groups
                   '("wheel" "netdev" "audio" "video")))
                 %base-user-accounts))
   #+end_src
** Packages
   #+begin_src scheme
     (packages
      (append
       (list (specification->package "emacs")
             (specification->package "emacs-exwm")
             (specification->package "git")
             (specification->package "neovim")
             (specification->package
              "emacs-desktop-environment")
             (specification->package "nss-certs"))
       %base-packages))
   #+end_src
** Services
   #+begin_src scheme
   (services
    (append
     (list (service xfce-desktop-service-type)
           (service cups-service-type)
           (set-xorg-configuration
            (xorg-configuration
             (keyboard-layout keyboard-layout))))
     %desktop-services))
   #+end_src
** Bootloader
   #+begin_src scheme
   (bootloader
    (bootloader-configuration
     (bootloader grub-efi-bootloader)
     (target "/boot/efi")
     (keyboard-layout keyboard-layout)))
   #+end_src
** Mapped Devices
   #+begin_src scheme
   (mapped-devices
    (list (mapped-device
           (source
            (uuid "6773b52e-1496-407e-b1d8-9a2ac7f7820f"))
           (target "system-root")
           (type luks-device-mapping))
          (mapped-device
           (source
            (uuid "08123a90-d66b-41ff-8f2c-4435292f7818"))
           (target "crypthome")
           (type luks-device-mapping))))
   #+end_src
** File System
   #+begin_src scheme
     (file-systems
      (cons* (file-system
               (mount-point "/")
               (device "/dev/mapper/system-root")
               (type "ext4")
               (dependencies mapped-devices))
             (file-system
               (mount-point "/boot/efi")
               (device (uuid "4B6C-4B80" 'fat32))
               (type "vfat"))
             (file-system
               (mount-point "/home")
               (device "/dev/mapper/crypthome")
               (type "ext4")
               (dependencies mapped-devices))
     
             %base-file-systems))
     (swap-devices
      (list "/tempSwap")))
   #+end_src
#+end_src

* Channels
:PROPERTIES:
:header-args: :tangle config/.config/guix/channels.scm
:END:
#+begin_src scheme
  (list (channel
          (name 'guix)
          (url "https://git.savannah.gnu.org/git/guix.git")
          (commit
            "bf8ee37e73933682293c6fc8738d753feff88a38")
          (introduction
            (make-channel-introduction
              "9edb3f66fd807b096b48283debdcddccfea34bad"
              (openpgp-fingerprint
                "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA"))))
        (channel
          (name 'nonguix)
          (url "https://gitlab.com/nonguix/nonguix")
          (commit
            "4640ff56f6377a6ca3ac8b1fdaef1ebd449dce91")
          (introduction
            (make-channel-introduction
              "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
              (openpgp-fingerprint
                "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5")))))
#+end_src
* Manifests
** Default
#+begin_src scheme :noweb-ref packages :tangle no
         "font-abattis-cantarell"
         "font-fira-code"
         "xrandr"
         "zsh"
         "xmodmap"
         "htop"
         "fontconfig"
         "neovim"
#+end_src
** Desktop
#+begin_src scheme :noweb-ref packages :tangle no
          "dunst"
          "picom"
          "xclip"
          "xwallpaper"
          "sxiv"
#+end_src
** Applications
#+begin_src scheme :noweb-ref packages :tangle no
         "alacritty" 
         "firefox"
         "lf"
         "mpv"
         "mpd"
         "qutebrowser"
#+end_src

** Decleration
:PROPERTIES:
:header-args: :noweb yes :tangle ./config/.config/guix/manifests/user.scm
:END:
#+begin_src scheme
  (specifications->manifest
     (list "glibc-locales"
           <<packages>> ))
#+end_src
* Profiles
:PROPERTIES:
:header-args: :tangle config/.config/guix/active-profiles
:END:
** Guix Profile

#+begin_src sh
export GUIX_PROFILE="$HOME/.config/guix/current"
. "$GUIX_PROFILE/etc/profile"
export GUIX_PROFILE="$HOME/.guix-profile"
. "$GUIX_PROFILE/etc/profile"
export GUIX_LOCPATH="$GUIX_PROFILE/lib/locale"
#+end_src
Set up XDG variables
#+begin_src sh :tangle config/.config/user-dirs.dirs
  XDG_DESKTOP_DIR=$HOME/.guix-profile
#+end_src
